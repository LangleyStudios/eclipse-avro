/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.eclipse.emf.examples.extlibrary.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Writer extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Writer\",\"namespace\":\"org.eclipse.emf.examples.extlibrary.avro\",\"fields\":[{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"lastName\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"books\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Book\",\"fields\":[{\"name\":\"publicationDate\",\"type\":\"string\"},{\"name\":\"copies\",\"type\":\"int\"},{\"name\":\"borrowers\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Borrower\",\"fields\":[{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"lastName\",\"type\":\"string\"},{\"name\":\"borrowed\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Lendable\",\"fields\":[{\"name\":\"copies\",\"type\":\"int\"},{\"name\":\"borrowers\",\"type\":{\"type\":\"array\",\"items\":\"Borrower\"}}]}}}]}}},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"pages\",\"type\":\"int\"},{\"name\":\"category\",\"type\":{\"type\":\"enum\",\"name\":\"BookCategory\",\"symbols\":[\"Mystery\",\"ScienceFiction\",\"Biography\"]}},{\"name\":\"author\",\"type\":\"Writer\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence address;
  @Deprecated public java.lang.CharSequence firstName;
  @Deprecated public java.lang.CharSequence lastName;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.util.List<org.eclipse.emf.examples.extlibrary.avro.Book> books;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Writer() {}

  /**
   * All-args constructor.
   */
  public Writer(java.lang.CharSequence address, java.lang.CharSequence firstName, java.lang.CharSequence lastName, java.lang.CharSequence name, java.util.List<org.eclipse.emf.examples.extlibrary.avro.Book> books) {
    this.address = address;
    this.firstName = firstName;
    this.lastName = lastName;
    this.name = name;
    this.books = books;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return address;
    case 1: return firstName;
    case 2: return lastName;
    case 3: return name;
    case 4: return books;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: address = (java.lang.CharSequence)value$; break;
    case 1: firstName = (java.lang.CharSequence)value$; break;
    case 2: lastName = (java.lang.CharSequence)value$; break;
    case 3: name = (java.lang.CharSequence)value$; break;
    case 4: books = (java.util.List<org.eclipse.emf.examples.extlibrary.avro.Book>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'address' field.
   */
  public java.lang.CharSequence getAddress() {
    return address;
  }

  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(java.lang.CharSequence value) {
    this.address = value;
  }

  /**
   * Gets the value of the 'firstName' field.
   */
  public java.lang.CharSequence getFirstName() {
    return firstName;
  }

  /**
   * Sets the value of the 'firstName' field.
   * @param value the value to set.
   */
  public void setFirstName(java.lang.CharSequence value) {
    this.firstName = value;
  }

  /**
   * Gets the value of the 'lastName' field.
   */
  public java.lang.CharSequence getLastName() {
    return lastName;
  }

  /**
   * Sets the value of the 'lastName' field.
   * @param value the value to set.
   */
  public void setLastName(java.lang.CharSequence value) {
    this.lastName = value;
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'books' field.
   */
  public java.util.List<org.eclipse.emf.examples.extlibrary.avro.Book> getBooks() {
    return books;
  }

  /**
   * Sets the value of the 'books' field.
   * @param value the value to set.
   */
  public void setBooks(java.util.List<org.eclipse.emf.examples.extlibrary.avro.Book> value) {
    this.books = value;
  }

  /** Creates a new Writer RecordBuilder */
  public static org.eclipse.emf.examples.extlibrary.avro.Writer.Builder newBuilder() {
    return new org.eclipse.emf.examples.extlibrary.avro.Writer.Builder();
  }
  
  /** Creates a new Writer RecordBuilder by copying an existing Builder */
  public static org.eclipse.emf.examples.extlibrary.avro.Writer.Builder newBuilder(org.eclipse.emf.examples.extlibrary.avro.Writer.Builder other) {
    return new org.eclipse.emf.examples.extlibrary.avro.Writer.Builder(other);
  }
  
  /** Creates a new Writer RecordBuilder by copying an existing Writer instance */
  public static org.eclipse.emf.examples.extlibrary.avro.Writer.Builder newBuilder(org.eclipse.emf.examples.extlibrary.avro.Writer other) {
    return new org.eclipse.emf.examples.extlibrary.avro.Writer.Builder(other);
  }
  
  /**
   * RecordBuilder for Writer instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Writer>
    implements org.apache.avro.data.RecordBuilder<Writer> {

    private java.lang.CharSequence address;
    private java.lang.CharSequence firstName;
    private java.lang.CharSequence lastName;
    private java.lang.CharSequence name;
    private java.util.List<org.eclipse.emf.examples.extlibrary.avro.Book> books;

    /** Creates a new Builder */
    private Builder() {
      super(org.eclipse.emf.examples.extlibrary.avro.Writer.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.eclipse.emf.examples.extlibrary.avro.Writer.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.address)) {
        this.address = data().deepCopy(fields()[0].schema(), other.address);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.firstName)) {
        this.firstName = data().deepCopy(fields()[1].schema(), other.firstName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lastName)) {
        this.lastName = data().deepCopy(fields()[2].schema(), other.lastName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.name)) {
        this.name = data().deepCopy(fields()[3].schema(), other.name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.books)) {
        this.books = data().deepCopy(fields()[4].schema(), other.books);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Writer instance */
    private Builder(org.eclipse.emf.examples.extlibrary.avro.Writer other) {
            super(org.eclipse.emf.examples.extlibrary.avro.Writer.SCHEMA$);
      if (isValidValue(fields()[0], other.address)) {
        this.address = data().deepCopy(fields()[0].schema(), other.address);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.firstName)) {
        this.firstName = data().deepCopy(fields()[1].schema(), other.firstName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lastName)) {
        this.lastName = data().deepCopy(fields()[2].schema(), other.lastName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.name)) {
        this.name = data().deepCopy(fields()[3].schema(), other.name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.books)) {
        this.books = data().deepCopy(fields()[4].schema(), other.books);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'address' field */
    public java.lang.CharSequence getAddress() {
      return address;
    }
    
    /** Sets the value of the 'address' field */
    public org.eclipse.emf.examples.extlibrary.avro.Writer.Builder setAddress(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.address = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'address' field has been set */
    public boolean hasAddress() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'address' field */
    public org.eclipse.emf.examples.extlibrary.avro.Writer.Builder clearAddress() {
      address = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'firstName' field */
    public java.lang.CharSequence getFirstName() {
      return firstName;
    }
    
    /** Sets the value of the 'firstName' field */
    public org.eclipse.emf.examples.extlibrary.avro.Writer.Builder setFirstName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.firstName = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'firstName' field has been set */
    public boolean hasFirstName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'firstName' field */
    public org.eclipse.emf.examples.extlibrary.avro.Writer.Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'lastName' field */
    public java.lang.CharSequence getLastName() {
      return lastName;
    }
    
    /** Sets the value of the 'lastName' field */
    public org.eclipse.emf.examples.extlibrary.avro.Writer.Builder setLastName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.lastName = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'lastName' field has been set */
    public boolean hasLastName() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'lastName' field */
    public org.eclipse.emf.examples.extlibrary.avro.Writer.Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public org.eclipse.emf.examples.extlibrary.avro.Writer.Builder setName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.name = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'name' field */
    public org.eclipse.emf.examples.extlibrary.avro.Writer.Builder clearName() {
      name = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'books' field */
    public java.util.List<org.eclipse.emf.examples.extlibrary.avro.Book> getBooks() {
      return books;
    }
    
    /** Sets the value of the 'books' field */
    public org.eclipse.emf.examples.extlibrary.avro.Writer.Builder setBooks(java.util.List<org.eclipse.emf.examples.extlibrary.avro.Book> value) {
      validate(fields()[4], value);
      this.books = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'books' field has been set */
    public boolean hasBooks() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'books' field */
    public org.eclipse.emf.examples.extlibrary.avro.Writer.Builder clearBooks() {
      books = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public Writer build() {
      try {
        Writer record = new Writer();
        record.address = fieldSetFlags()[0] ? this.address : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.firstName = fieldSetFlags()[1] ? this.firstName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.lastName = fieldSetFlags()[2] ? this.lastName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.name = fieldSetFlags()[3] ? this.name : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.books = fieldSetFlags()[4] ? this.books : (java.util.List<org.eclipse.emf.examples.extlibrary.avro.Book>) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
