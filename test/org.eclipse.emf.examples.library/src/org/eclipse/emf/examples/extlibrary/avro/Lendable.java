/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.eclipse.emf.examples.extlibrary.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Lendable extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Lendable\",\"namespace\":\"org.eclipse.emf.examples.extlibrary.avro\",\"fields\":[{\"name\":\"copies\",\"type\":\"int\"},{\"name\":\"borrowers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int copies;
  @Deprecated public java.util.List<java.lang.CharSequence> borrowers;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Lendable() {}

  /**
   * All-args constructor.
   */
  public Lendable(java.lang.Integer copies, java.util.List<java.lang.CharSequence> borrowers) {
    this.copies = copies;
    this.borrowers = borrowers;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return copies;
    case 1: return borrowers;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: copies = (java.lang.Integer)value$; break;
    case 1: borrowers = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'copies' field.
   */
  public java.lang.Integer getCopies() {
    return copies;
  }

  /**
   * Sets the value of the 'copies' field.
   * @param value the value to set.
   */
  public void setCopies(java.lang.Integer value) {
    this.copies = value;
  }

  /**
   * Gets the value of the 'borrowers' field.
   */
  public java.util.List<java.lang.CharSequence> getBorrowers() {
    return borrowers;
  }

  /**
   * Sets the value of the 'borrowers' field.
   * @param value the value to set.
   */
  public void setBorrowers(java.util.List<java.lang.CharSequence> value) {
    this.borrowers = value;
  }

  /** Creates a new Lendable RecordBuilder */
  public static org.eclipse.emf.examples.extlibrary.avro.Lendable.Builder newBuilder() {
    return new org.eclipse.emf.examples.extlibrary.avro.Lendable.Builder();
  }
  
  /** Creates a new Lendable RecordBuilder by copying an existing Builder */
  public static org.eclipse.emf.examples.extlibrary.avro.Lendable.Builder newBuilder(org.eclipse.emf.examples.extlibrary.avro.Lendable.Builder other) {
    return new org.eclipse.emf.examples.extlibrary.avro.Lendable.Builder(other);
  }
  
  /** Creates a new Lendable RecordBuilder by copying an existing Lendable instance */
  public static org.eclipse.emf.examples.extlibrary.avro.Lendable.Builder newBuilder(org.eclipse.emf.examples.extlibrary.avro.Lendable other) {
    return new org.eclipse.emf.examples.extlibrary.avro.Lendable.Builder(other);
  }
  
  /**
   * RecordBuilder for Lendable instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Lendable>
    implements org.apache.avro.data.RecordBuilder<Lendable> {

    private int copies;
    private java.util.List<java.lang.CharSequence> borrowers;

    /** Creates a new Builder */
    private Builder() {
      super(org.eclipse.emf.examples.extlibrary.avro.Lendable.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.eclipse.emf.examples.extlibrary.avro.Lendable.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.copies)) {
        this.copies = data().deepCopy(fields()[0].schema(), other.copies);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.borrowers)) {
        this.borrowers = data().deepCopy(fields()[1].schema(), other.borrowers);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Lendable instance */
    private Builder(org.eclipse.emf.examples.extlibrary.avro.Lendable other) {
            super(org.eclipse.emf.examples.extlibrary.avro.Lendable.SCHEMA$);
      if (isValidValue(fields()[0], other.copies)) {
        this.copies = data().deepCopy(fields()[0].schema(), other.copies);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.borrowers)) {
        this.borrowers = data().deepCopy(fields()[1].schema(), other.borrowers);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'copies' field */
    public java.lang.Integer getCopies() {
      return copies;
    }
    
    /** Sets the value of the 'copies' field */
    public org.eclipse.emf.examples.extlibrary.avro.Lendable.Builder setCopies(int value) {
      validate(fields()[0], value);
      this.copies = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'copies' field has been set */
    public boolean hasCopies() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'copies' field */
    public org.eclipse.emf.examples.extlibrary.avro.Lendable.Builder clearCopies() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'borrowers' field */
    public java.util.List<java.lang.CharSequence> getBorrowers() {
      return borrowers;
    }
    
    /** Sets the value of the 'borrowers' field */
    public org.eclipse.emf.examples.extlibrary.avro.Lendable.Builder setBorrowers(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[1], value);
      this.borrowers = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'borrowers' field has been set */
    public boolean hasBorrowers() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'borrowers' field */
    public org.eclipse.emf.examples.extlibrary.avro.Lendable.Builder clearBorrowers() {
      borrowers = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public Lendable build() {
      try {
        Lendable record = new Lendable();
        record.copies = fieldSetFlags()[0] ? this.copies : (java.lang.Integer) defaultValue(fields()[0]);
        record.borrowers = fieldSetFlags()[1] ? this.borrowers : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
