/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.eclipse.emf.examples.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Item extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Item\",\"namespace\":\"org.eclipse.emf.examples.avro\",\"fields\":[{\"name\":\"publicationDate\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence publicationDate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Item() {}

  /**
   * All-args constructor.
   */
  public Item(java.lang.CharSequence publicationDate) {
    this.publicationDate = publicationDate;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return publicationDate;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: publicationDate = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'publicationDate' field.
   */
  public java.lang.CharSequence getPublicationDate() {
    return publicationDate;
  }

  /**
   * Sets the value of the 'publicationDate' field.
   * @param value the value to set.
   */
  public void setPublicationDate(java.lang.CharSequence value) {
    this.publicationDate = value;
  }

  /** Creates a new Item RecordBuilder */
  public static org.eclipse.emf.examples.avro.Item.Builder newBuilder() {
    return new org.eclipse.emf.examples.avro.Item.Builder();
  }
  
  /** Creates a new Item RecordBuilder by copying an existing Builder */
  public static org.eclipse.emf.examples.avro.Item.Builder newBuilder(org.eclipse.emf.examples.avro.Item.Builder other) {
    return new org.eclipse.emf.examples.avro.Item.Builder(other);
  }
  
  /** Creates a new Item RecordBuilder by copying an existing Item instance */
  public static org.eclipse.emf.examples.avro.Item.Builder newBuilder(org.eclipse.emf.examples.avro.Item other) {
    return new org.eclipse.emf.examples.avro.Item.Builder(other);
  }
  
  /**
   * RecordBuilder for Item instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Item>
    implements org.apache.avro.data.RecordBuilder<Item> {

    private java.lang.CharSequence publicationDate;

    /** Creates a new Builder */
    private Builder() {
      super(org.eclipse.emf.examples.avro.Item.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.eclipse.emf.examples.avro.Item.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.publicationDate)) {
        this.publicationDate = data().deepCopy(fields()[0].schema(), other.publicationDate);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Item instance */
    private Builder(org.eclipse.emf.examples.avro.Item other) {
            super(org.eclipse.emf.examples.avro.Item.SCHEMA$);
      if (isValidValue(fields()[0], other.publicationDate)) {
        this.publicationDate = data().deepCopy(fields()[0].schema(), other.publicationDate);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'publicationDate' field */
    public java.lang.CharSequence getPublicationDate() {
      return publicationDate;
    }
    
    /** Sets the value of the 'publicationDate' field */
    public org.eclipse.emf.examples.avro.Item.Builder setPublicationDate(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.publicationDate = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'publicationDate' field has been set */
    public boolean hasPublicationDate() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'publicationDate' field */
    public org.eclipse.emf.examples.avro.Item.Builder clearPublicationDate() {
      publicationDate = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public Item build() {
      try {
        Item record = new Item();
        record.publicationDate = fieldSetFlags()[0] ? this.publicationDate : (java.lang.CharSequence) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
