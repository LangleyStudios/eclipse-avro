/*
* generated by Xtext
*/
grammar InternalAvroSchema;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package net.langleystudios.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package net.langleystudios.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import net.langleystudios.dsl.services.AvroSchemaGrammarAccess;

}

@parser::members {

 	private AvroSchemaGrammarAccess grammarAccess;
 	
    public InternalAvroSchemaParser(TokenStream input, AvroSchemaGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "AvroSchema";	
   	}
   	
   	@Override
   	protected AvroSchemaGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleAvroSchema
entryRuleAvroSchema returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAvroSchemaRule()); }
	 iv_ruleAvroSchema=ruleAvroSchema 
	 { $current=$iv_ruleAvroSchema.current; } 
	 EOF 
;

// Rule AvroSchema
ruleAvroSchema returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getAvroSchemaAccess().getTypesJsonTypeParserRuleCall_0_0()); 
	    }
		lv_types_0_1=ruleJsonType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAvroSchemaRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_0_1, 
        		"JsonType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getAvroSchemaAccess().getTypesRecordTypeParserRuleCall_0_1()); 
	    }
		lv_types_0_2=ruleRecordType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAvroSchemaRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_0_2, 
        		"RecordType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getAvroSchemaAccess().getTypesUnionTypeParserRuleCall_0_2()); 
	    }
		lv_types_0_3=ruleUnionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAvroSchemaRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_0_3, 
        		"UnionType");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
;





// Entry rule entryRuleUnionType
entryRuleUnionType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnionTypeRule()); }
	 iv_ruleUnionType=ruleUnionType 
	 { $current=$iv_ruleUnionType.current; } 
	 EOF 
;

// Rule UnionType
ruleUnionType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUnionTypeAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnionTypeAccess().getTypesUnionMemberParserRuleCall_1_0()); 
	    }
		lv_types_1_0=ruleUnionMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnionTypeRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_1_0, 
        		"UnionMember");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUnionTypeAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnionTypeAccess().getTypesUnionMemberParserRuleCall_2_1_0()); 
	    }
		lv_types_3_0=ruleUnionMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnionTypeRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_3_0, 
        		"UnionMember");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUnionTypeAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleUnionMember
entryRuleUnionMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnionMemberRule()); }
	 iv_ruleUnionMember=ruleUnionMember 
	 { $current=$iv_ruleUnionMember.current; } 
	 EOF 
;

// Rule UnionMember
ruleUnionMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnionMemberAccess().getRecordTypeParserRuleCall_0()); 
    }
    this_RecordType_0=ruleRecordType
    { 
        $current = $this_RecordType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUnionMemberAccess().getArrayTypeParserRuleCall_1()); 
    }
    this_ArrayType_1=ruleArrayType
    { 
        $current = $this_ArrayType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUnionMemberAccess().getPrimitiveParserRuleCall_2()); 
    }
    this_Primitive_2=rulePrimitive
    { 
        $current = $this_Primitive_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUnionMemberAccess().getMapTypeParserRuleCall_3()); 
    }
    this_MapType_3=ruleMapType
    { 
        $current = $this_MapType_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUnionMemberAccess().getEnumTypeParserRuleCall_4()); 
    }
    this_EnumType_4=ruleEnumType
    { 
        $current = $this_EnumType_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUnionMemberAccess().getFixedTypeParserRuleCall_5()); 
    }
    this_FixedType_5=ruleFixedType
    { 
        $current = $this_FixedType_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleJsonType
entryRuleJsonType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJsonTypeRule()); }
	 iv_ruleJsonType=ruleJsonType 
	 { $current=$iv_ruleJsonType.current; } 
	 EOF 
;

// Rule JsonType
ruleJsonType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJsonTypeAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJsonTypeAccess().getQuotationMarkKeyword_1());
    }
	otherlv_2='type' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getJsonTypeAccess().getTypeKeyword_2());
    }
	otherlv_3='"' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getJsonTypeAccess().getQuotationMarkKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getJsonTypeAccess().getColonKeyword_4());
    }
	otherlv_5='"' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJsonTypeAccess().getQuotationMarkKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJsonTypeAccess().getTypePrimitiveParserRuleCall_6_0()); 
	    }
		lv_type_6_0=rulePrimitive		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_6_0, 
        		"Primitive");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='"' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getJsonTypeAccess().getQuotationMarkKeyword_7());
    }
	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getJsonTypeAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleRecordType
entryRuleRecordType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRecordTypeRule()); }
	 iv_ruleRecordType=ruleRecordType 
	 { $current=$iv_ruleRecordType.current; } 
	 EOF 
;

// Rule RecordType
ruleRecordType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRecordTypeAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRecordTypeAccess().getQuotationMarkKeyword_1());
    }
	otherlv_2='type' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRecordTypeAccess().getTypeKeyword_2());
    }
	otherlv_3='"' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRecordTypeAccess().getQuotationMarkKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRecordTypeAccess().getColonKeyword_4());
    }
	otherlv_5='"' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRecordTypeAccess().getQuotationMarkKeyword_5());
    }
	otherlv_6='record' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRecordTypeAccess().getRecordKeyword_6());
    }
	otherlv_7='"' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRecordTypeAccess().getQuotationMarkKeyword_7());
    }
	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRecordTypeAccess().getCommaKeyword_8());
    }
	otherlv_9='"' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRecordTypeAccess().getQuotationMarkKeyword_9());
    }
	otherlv_10='name' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRecordTypeAccess().getNameKeyword_10());
    }
	otherlv_11='"' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getRecordTypeAccess().getQuotationMarkKeyword_11());
    }
	otherlv_12=':' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRecordTypeAccess().getColonKeyword_12());
    }
	otherlv_13='"' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getRecordTypeAccess().getQuotationMarkKeyword_13());
    }
(
(
		lv_name_14_0=RULE_ID
		{
			newLeafNode(lv_name_14_0, grammarAccess.getRecordTypeAccess().getNameIDTerminalRuleCall_14_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRecordTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_14_0, 
        		"ID");
	    }

)
)	otherlv_15='"' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getRecordTypeAccess().getQuotationMarkKeyword_15());
    }
(	otherlv_16=',' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getRecordTypeAccess().getCommaKeyword_16_0());
    }
	otherlv_17='"' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getRecordTypeAccess().getQuotationMarkKeyword_16_1());
    }
	otherlv_18='namespace' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getRecordTypeAccess().getNamespaceKeyword_16_2());
    }
	otherlv_19='"' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getRecordTypeAccess().getQuotationMarkKeyword_16_3());
    }
	otherlv_20=':' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getRecordTypeAccess().getColonKeyword_16_4());
    }
	otherlv_21='"' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getRecordTypeAccess().getQuotationMarkKeyword_16_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRecordTypeAccess().getNamespaceNamespaceParserRuleCall_16_6_0()); 
	    }
		lv_namespace_22_0=ruleNamespace		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRecordTypeRule());
	        }
       		set(
       			$current, 
       			"namespace",
        		lv_namespace_22_0, 
        		"Namespace");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_23='"' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getRecordTypeAccess().getQuotationMarkKeyword_16_7());
    }
)?	otherlv_24=',' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getRecordTypeAccess().getCommaKeyword_17());
    }
	otherlv_25='"' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getRecordTypeAccess().getQuotationMarkKeyword_18());
    }
	otherlv_26='fields' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getRecordTypeAccess().getFieldsKeyword_19());
    }
	otherlv_27='"' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getRecordTypeAccess().getQuotationMarkKeyword_20());
    }
	otherlv_28=':' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getRecordTypeAccess().getColonKeyword_21());
    }
	otherlv_29='[' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getRecordTypeAccess().getLeftSquareBracketKeyword_22());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRecordTypeAccess().getFieldsFieldParserRuleCall_23_0()); 
	    }
		lv_fields_30_0=ruleField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRecordTypeRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_30_0, 
        		"Field");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_31=',' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getRecordTypeAccess().getCommaKeyword_24_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRecordTypeAccess().getFieldsFieldParserRuleCall_24_1_0()); 
	    }
		lv_fields_32_0=ruleField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRecordTypeRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_32_0, 
        		"Field");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_33=']' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getRecordTypeAccess().getRightSquareBracketKeyword_25());
    }
	otherlv_34='}' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getRecordTypeAccess().getRightCurlyBracketKeyword_26());
    }
)
;





// Entry rule entryRuleField
entryRuleField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	 iv_ruleField=ruleField 
	 { $current=$iv_ruleField.current; } 
	 EOF 
;

// Rule Field
ruleField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFieldAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFieldAccess().getQuotationMarkKeyword_1());
    }
	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFieldAccess().getNameKeyword_2());
    }
	otherlv_3='"' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFieldAccess().getQuotationMarkKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFieldAccess().getColonKeyword_4());
    }
	otherlv_5='"' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFieldAccess().getQuotationMarkKeyword_5());
    }
(
(
(
		lv_name_6_1=	'name' 
    {
        newLeafNode(lv_name_6_1, grammarAccess.getFieldAccess().getNameNameKeyword_6_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_6_1, null);
	    }

    |		lv_name_6_2=RULE_ID
		{
			newLeafNode(lv_name_6_2, grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_6_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_2, 
        		"ID");
	    }

)

)
)	otherlv_7='"' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFieldAccess().getQuotationMarkKeyword_7());
    }
	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFieldAccess().getCommaKeyword_8());
    }
	otherlv_9='"' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFieldAccess().getQuotationMarkKeyword_9());
    }
	otherlv_10='type' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getFieldAccess().getTypeKeyword_10());
    }
	otherlv_11='"' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFieldAccess().getQuotationMarkKeyword_11());
    }
	otherlv_12=':' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getFieldAccess().getColonKeyword_12());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAccess().getPrimitivePrimitiveParserRuleCall_13_0_0()); 
	    }
		lv_primitive_13_0=rulePrimitive		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldRule());
	        }
       		set(
       			$current, 
       			"primitive",
        		lv_primitive_13_0, 
        		"Primitive");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAccess().getRecordRecordTypeParserRuleCall_13_1_0()); 
	    }
		lv_record_14_0=ruleRecordType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldRule());
	        }
       		set(
       			$current, 
       			"record",
        		lv_record_14_0, 
        		"RecordType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_15='"' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getFieldAccess().getQuotationMarkKeyword_13_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldRule());
	        }
        }
	otherlv_16=RULE_ID
	{
		newLeafNode(otherlv_16, grammarAccess.getFieldAccess().getRecordRefRecordTypeCrossReference_13_2_1_0()); 
	}

)
)	otherlv_17='"' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getFieldAccess().getQuotationMarkKeyword_13_2_2());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAccess().getEtypeEnumTypeParserRuleCall_13_3_0()); 
	    }
		lv_etype_18_0=ruleEnumType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldRule());
	        }
       		set(
       			$current, 
       			"etype",
        		lv_etype_18_0, 
        		"EnumType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAccess().getArrayArrayTypeParserRuleCall_13_4_0()); 
	    }
		lv_array_19_0=ruleArrayType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldRule());
	        }
       		set(
       			$current, 
       			"array",
        		lv_array_19_0, 
        		"ArrayType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAccess().getMapMapTypeParserRuleCall_13_5_0()); 
	    }
		lv_map_20_0=ruleMapType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldRule());
	        }
       		set(
       			$current, 
       			"map",
        		lv_map_20_0, 
        		"MapType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAccess().getFixedFixedTypeParserRuleCall_13_6_0()); 
	    }
		lv_fixed_21_0=ruleFixedType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldRule());
	        }
       		set(
       			$current, 
       			"fixed",
        		lv_fixed_21_0, 
        		"FixedType");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getFieldAccess().getRightCurlyBracketKeyword_14());
    }
)
;





// Entry rule entryRuleEnumType
entryRuleEnumType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumTypeRule()); }
	 iv_ruleEnumType=ruleEnumType 
	 { $current=$iv_ruleEnumType.current; } 
	 EOF 
;

// Rule EnumType
ruleEnumType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumTypeAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumTypeAccess().getQuotationMarkKeyword_1());
    }
	otherlv_2='type' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumTypeAccess().getTypeKeyword_2());
    }
	otherlv_3='"' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEnumTypeAccess().getQuotationMarkKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumTypeAccess().getColonKeyword_4());
    }
	otherlv_5='"' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEnumTypeAccess().getQuotationMarkKeyword_5());
    }
	otherlv_6='enum' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEnumTypeAccess().getEnumKeyword_6());
    }
	otherlv_7='"' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEnumTypeAccess().getQuotationMarkKeyword_7());
    }
	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEnumTypeAccess().getCommaKeyword_8());
    }
	otherlv_9='"' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEnumTypeAccess().getQuotationMarkKeyword_9());
    }
	otherlv_10='name' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getEnumTypeAccess().getNameKeyword_10());
    }
	otherlv_11='"' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getEnumTypeAccess().getQuotationMarkKeyword_11());
    }
	otherlv_12=':' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getEnumTypeAccess().getColonKeyword_12());
    }
	otherlv_13='"' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getEnumTypeAccess().getQuotationMarkKeyword_13());
    }
(
(
		lv_name_14_0=RULE_ID
		{
			newLeafNode(lv_name_14_0, grammarAccess.getEnumTypeAccess().getNameIDTerminalRuleCall_14_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_14_0, 
        		"ID");
	    }

)
)	otherlv_15='"' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getEnumTypeAccess().getQuotationMarkKeyword_15());
    }
	otherlv_16=',' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getEnumTypeAccess().getCommaKeyword_16());
    }
	otherlv_17='"' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getEnumTypeAccess().getQuotationMarkKeyword_17());
    }
	otherlv_18='symbols' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getEnumTypeAccess().getSymbolsKeyword_18());
    }
	otherlv_19='"' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getEnumTypeAccess().getQuotationMarkKeyword_19());
    }
	otherlv_20=':' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getEnumTypeAccess().getColonKeyword_20());
    }
	otherlv_21='[' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getEnumTypeAccess().getLeftSquareBracketKeyword_21());
    }
(	otherlv_22='"' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getEnumTypeAccess().getQuotationMarkKeyword_22_0());
    }
(
(
		lv_symbols_23_0=RULE_ID
		{
			newLeafNode(lv_symbols_23_0, grammarAccess.getEnumTypeAccess().getSymbolsIDTerminalRuleCall_22_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumTypeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"symbols",
        		lv_symbols_23_0, 
        		"ID");
	    }

)
)	otherlv_24='"' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getEnumTypeAccess().getQuotationMarkKeyword_22_2());
    }
)(	otherlv_25=',' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getEnumTypeAccess().getCommaKeyword_23_0());
    }
	otherlv_26='"' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getEnumTypeAccess().getQuotationMarkKeyword_23_1());
    }
(
(
		lv_symbols_27_0=RULE_ID
		{
			newLeafNode(lv_symbols_27_0, grammarAccess.getEnumTypeAccess().getSymbolsIDTerminalRuleCall_23_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumTypeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"symbols",
        		lv_symbols_27_0, 
        		"ID");
	    }

)
)	otherlv_28='"' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getEnumTypeAccess().getQuotationMarkKeyword_23_3());
    }
)*	otherlv_29=']' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getEnumTypeAccess().getRightSquareBracketKeyword_24());
    }
	otherlv_30='}' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getEnumTypeAccess().getRightCurlyBracketKeyword_25());
    }
)
;





// Entry rule entryRuleArrayType
entryRuleArrayType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayTypeRule()); }
	 iv_ruleArrayType=ruleArrayType 
	 { $current=$iv_ruleArrayType.current; } 
	 EOF 
;

// Rule ArrayType
ruleArrayType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getArrayTypeAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArrayTypeAccess().getQuotationMarkKeyword_1());
    }
	otherlv_2='type' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArrayTypeAccess().getTypeKeyword_2());
    }
	otherlv_3='"' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArrayTypeAccess().getQuotationMarkKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getArrayTypeAccess().getColonKeyword_4());
    }
	otherlv_5='"' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getArrayTypeAccess().getQuotationMarkKeyword_5());
    }
	otherlv_6='array' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getArrayTypeAccess().getArrayKeyword_6());
    }
	otherlv_7='"' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getArrayTypeAccess().getQuotationMarkKeyword_7());
    }
	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getArrayTypeAccess().getCommaKeyword_8());
    }
	otherlv_9='"' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getArrayTypeAccess().getQuotationMarkKeyword_9());
    }
	otherlv_10='items' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getArrayTypeAccess().getItemsKeyword_10());
    }
	otherlv_11='"' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getArrayTypeAccess().getQuotationMarkKeyword_11());
    }
	otherlv_12=':' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getArrayTypeAccess().getColonKeyword_12());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getArrayTypeAccess().getPrimitivePrimitiveParserRuleCall_13_0_0()); 
	    }
		lv_primitive_13_0=rulePrimitive		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayTypeRule());
	        }
       		set(
       			$current, 
       			"primitive",
        		lv_primitive_13_0, 
        		"Primitive");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayTypeAccess().getRecordRecordTypeParserRuleCall_13_1_0()); 
	    }
		lv_record_14_0=ruleRecordType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayTypeRule());
	        }
       		set(
       			$current, 
       			"record",
        		lv_record_14_0, 
        		"RecordType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_15='"' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getArrayTypeAccess().getQuotationMarkKeyword_13_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrayTypeRule());
	        }
        }
	otherlv_16=RULE_ID
	{
		newLeafNode(otherlv_16, grammarAccess.getArrayTypeAccess().getRecordRefRecordTypeCrossReference_13_2_1_0()); 
	}

)
)	otherlv_17='"' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getArrayTypeAccess().getQuotationMarkKeyword_13_2_2());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayTypeAccess().getEtypeEnumTypeParserRuleCall_13_3_0()); 
	    }
		lv_etype_18_0=ruleEnumType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayTypeRule());
	        }
       		set(
       			$current, 
       			"etype",
        		lv_etype_18_0, 
        		"EnumType");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getArrayTypeAccess().getRightCurlyBracketKeyword_14());
    }
)
;





// Entry rule entryRuleMapType
entryRuleMapType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMapTypeRule()); }
	 iv_ruleMapType=ruleMapType 
	 { $current=$iv_ruleMapType.current; } 
	 EOF 
;

// Rule MapType
ruleMapType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMapTypeAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMapTypeAccess().getQuotationMarkKeyword_1());
    }
	otherlv_2='type' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMapTypeAccess().getTypeKeyword_2());
    }
	otherlv_3='"' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMapTypeAccess().getQuotationMarkKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMapTypeAccess().getColonKeyword_4());
    }
	otherlv_5='"' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMapTypeAccess().getQuotationMarkKeyword_5());
    }
	otherlv_6='map' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMapTypeAccess().getMapKeyword_6());
    }
	otherlv_7='"' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMapTypeAccess().getQuotationMarkKeyword_7());
    }
	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMapTypeAccess().getCommaKeyword_8());
    }
	otherlv_9='"' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMapTypeAccess().getQuotationMarkKeyword_9());
    }
	otherlv_10='items' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMapTypeAccess().getItemsKeyword_10());
    }
	otherlv_11='"' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMapTypeAccess().getQuotationMarkKeyword_11());
    }
	otherlv_12=':' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getMapTypeAccess().getColonKeyword_12());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMapTypeAccess().getPrimitivePrimitiveParserRuleCall_13_0_0()); 
	    }
		lv_primitive_13_0=rulePrimitive		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapTypeRule());
	        }
       		set(
       			$current, 
       			"primitive",
        		lv_primitive_13_0, 
        		"Primitive");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapTypeAccess().getRecordRecordTypeParserRuleCall_13_1_0()); 
	    }
		lv_record_14_0=ruleRecordType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapTypeRule());
	        }
       		set(
       			$current, 
       			"record",
        		lv_record_14_0, 
        		"RecordType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_15='"' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getMapTypeAccess().getQuotationMarkKeyword_13_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapTypeRule());
	        }
        }
	otherlv_16=RULE_ID
	{
		newLeafNode(otherlv_16, grammarAccess.getMapTypeAccess().getRecordRefRecordTypeCrossReference_13_2_1_0()); 
	}

)
)	otherlv_17='"' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getMapTypeAccess().getQuotationMarkKeyword_13_2_2());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapTypeAccess().getEtypeEnumTypeParserRuleCall_13_3_0()); 
	    }
		lv_etype_18_0=ruleEnumType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapTypeRule());
	        }
       		set(
       			$current, 
       			"etype",
        		lv_etype_18_0, 
        		"EnumType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapTypeAccess().getAtypeArrayTypeParserRuleCall_13_4_0()); 
	    }
		lv_atype_19_0=ruleArrayType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapTypeRule());
	        }
       		set(
       			$current, 
       			"atype",
        		lv_atype_19_0, 
        		"ArrayType");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_20='}' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getMapTypeAccess().getRightCurlyBracketKeyword_14());
    }
)
;





// Entry rule entryRuleFixedType
entryRuleFixedType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFixedTypeRule()); }
	 iv_ruleFixedType=ruleFixedType 
	 { $current=$iv_ruleFixedType.current; } 
	 EOF 
;

// Rule FixedType
ruleFixedType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFixedTypeAccess().getQuotationMarkKeyword_0());
    }
	otherlv_1='fixed' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFixedTypeAccess().getFixedKeyword_1());
    }
	otherlv_2='"' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFixedTypeAccess().getQuotationMarkKeyword_2());
    }
	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFixedTypeAccess().getCommaKeyword_3());
    }
	otherlv_4='"' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFixedTypeAccess().getQuotationMarkKeyword_4());
    }
	otherlv_5='name' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFixedTypeAccess().getNameKeyword_5());
    }
	otherlv_6='"' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFixedTypeAccess().getQuotationMarkKeyword_6());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFixedTypeAccess().getColonKeyword_7());
    }
	otherlv_8='"' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFixedTypeAccess().getQuotationMarkKeyword_8());
    }
(
(
		lv_name_9_0=RULE_ID
		{
			newLeafNode(lv_name_9_0, grammarAccess.getFixedTypeAccess().getNameIDTerminalRuleCall_9_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFixedTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_9_0, 
        		"ID");
	    }

)
)	otherlv_10='"' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getFixedTypeAccess().getQuotationMarkKeyword_10());
    }
	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFixedTypeAccess().getCommaKeyword_11());
    }
	otherlv_12='"' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getFixedTypeAccess().getQuotationMarkKeyword_12());
    }
	otherlv_13='size' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFixedTypeAccess().getSizeKeyword_13());
    }
	otherlv_14='"' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getFixedTypeAccess().getQuotationMarkKeyword_14());
    }
	otherlv_15=':' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getFixedTypeAccess().getColonKeyword_15());
    }
	otherlv_16='"' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getFixedTypeAccess().getQuotationMarkKeyword_16());
    }
(
(
		lv_size_17_0=RULE_INT
		{
			newLeafNode(lv_size_17_0, grammarAccess.getFixedTypeAccess().getSizeINTTerminalRuleCall_17_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFixedTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"size",
        		lv_size_17_0, 
        		"INT");
	    }

)
)	otherlv_18='"' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getFixedTypeAccess().getQuotationMarkKeyword_18());
    }
)
;





// Entry rule entryRulePrimitive
entryRulePrimitive returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitiveRule()); }
	 iv_rulePrimitive=rulePrimitive 
	 { $current=$iv_rulePrimitive.current; } 
	 EOF 
;

// Rule Primitive
rulePrimitive returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrimitiveAccess().getQuotationMarkKeyword_0());
    }
(
(
(
		lv_type_1_1=	'null' 
    {
        newLeafNode(lv_type_1_1, grammarAccess.getPrimitiveAccess().getTypeNullKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_1, null);
	    }

    |		lv_type_1_2=	'boolean' 
    {
        newLeafNode(lv_type_1_2, grammarAccess.getPrimitiveAccess().getTypeBooleanKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_2, null);
	    }

    |		lv_type_1_3=	'int' 
    {
        newLeafNode(lv_type_1_3, grammarAccess.getPrimitiveAccess().getTypeIntKeyword_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_3, null);
	    }

    |		lv_type_1_4=	'long' 
    {
        newLeafNode(lv_type_1_4, grammarAccess.getPrimitiveAccess().getTypeLongKeyword_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_4, null);
	    }

    |		lv_type_1_5=	'float' 
    {
        newLeafNode(lv_type_1_5, grammarAccess.getPrimitiveAccess().getTypeFloatKeyword_1_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_5, null);
	    }

    |		lv_type_1_6=	'double' 
    {
        newLeafNode(lv_type_1_6, grammarAccess.getPrimitiveAccess().getTypeDoubleKeyword_1_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_6, null);
	    }

    |		lv_type_1_7=	'bytes' 
    {
        newLeafNode(lv_type_1_7, grammarAccess.getPrimitiveAccess().getTypeBytesKeyword_1_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_7, null);
	    }

    |		lv_type_1_8=	'string' 
    {
        newLeafNode(lv_type_1_8, grammarAccess.getPrimitiveAccess().getTypeStringKeyword_1_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_8, null);
	    }

)

)
)	otherlv_2='"' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrimitiveAccess().getQuotationMarkKeyword_2());
    }
)
;





// Entry rule entryRuleNamespace
entryRuleNamespace returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamespaceRule()); } 
	 iv_ruleNamespace=ruleNamespace 
	 { $current=$iv_ruleNamespace.current.getText(); }  
	 EOF 
;

// Rule Namespace
ruleNamespace returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getNamespaceAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamespaceAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getNamespaceAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


